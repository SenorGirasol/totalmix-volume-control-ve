﻿# See https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options
# for C# defaults.

# Set this to the top-most EditorConfig file.
root = true

# Use spaces for indentation.
[*]
indent_style = space

# XML project and config files.
[*.csproj]
indent_size = 2

# C# code.
[*.cs]

# Configure indentation, new lines and encoding.
charset = utf-8-bom
end_of_line = crlf
indent_size = 4
max_line_length = 100
insert_final_newline = true
trim_trailing_whitespace = true

# Set all diagnostics to be warnings by default.
dotnet_analyzer_diagnostic.severity = warning

# -= Whitespace =-

# Indentation preferences.
csharp_indent_labels = flush_left

# -= Code Style =-

# 'using' directive preferences.
csharp_using_directive_placement = outside_namespace:warning

# Code-block preferences.
csharp_prefer_simple_using_statement = true:warning
csharp_prefer_braces = true:warning
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:warning
csharp_style_prefer_top_level_statements = true:warning
csharp_style_prefer_primary_constructors = true:warning

# Expression-bodied members.
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_lambdas = true:warning
csharp_style_expression_bodied_local_functions = false:warning

# Expression-level preferences.
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_prefer_collection_expression = when_types_loosely_match:warning
dotnet_style_namespace_match_folder = true:warning
csharp_style_throw_expression = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_prefer_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
csharp_style_prefer_tuple_swap = true:warning
csharp_style_prefer_utf8_string_literals = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:warning

# Field preferences.
dotnet_style_readonly_field = true:warning

# Language keywords vs BCL types preferences.
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Modifier preferences.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_prefer_static_local_function = true:warning
csharp_prefer_static_anonymous_function = true:warning
csharp_style_prefer_readonly_struct = true:warning
csharp_style_prefer_readonly_struct_member = true:warning

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = true:warning
csharp_style_allow_embedded_statements_on_same_line_experimental = false:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:warning
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false:warning
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:warning

# Null-checking preferences.
csharp_style_conditional_delegate_call = true:warning

# Parameter preferences.
dotnet_code_quality_unused_parameters = all:warning

# Parentheses preferences.
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning

# Pattern matching preferences.
csharp_style_prefer_switch_expression = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_extended_property_pattern = true:warning

# this. and Me. preferences.
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# var preferences.
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# -= Naming Style =-

# Naming style definitions.
dotnet_naming_style.camel_case_style.capitalization = camel_case
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Non-private static fields are PascalCase.
dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = pascal_case_style

# Non-private readonly fields are PascalCase.
dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = pascal_case_style

# Constants are PascalCase.
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = pascal_case_style

# Static fields are camelCase and start with s_.
dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_rule.static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

# Instance fields are camelCase and start with _.
dotnet_naming_symbols.instance_fields.applicable_kinds = field
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

# Locals and parameters are camelCase.
dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

# Local functions are PascalCase.
dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = pascal_case_style

# All remaining cases default to PascalCase.
dotnet_naming_symbols.all_members.applicable_kinds = *
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

# -= Analyzers (Roslyn) =-

# Add missing cases to switch statement.
dotnet_diagnostic.IDE0010.severity = none

# Use conditional expression for assignment.
dotnet_diagnostic.IDE0045.severity = none

# Use conditional expression for return.
dotnet_diagnostic.IDE0046.severity = none

# Remove unnecessary expression value.
dotnet_diagnostic.IDE0058.severity = none

# Add missing cases to switch expression.
dotnet_diagnostic.IDE0072.severity = none

# Missing XML comment for publicly visible type or member.
dotnet_diagnostic.CS1591.severity = none

# Enums should have zero value.
dotnet_diagnostic.CA1008.severity = none

# Validate arguments of public methods.
dotnet_diagnostic.CA1062.severity = none

# Normalize strings to uppercase.
dotnet_diagnostic.CA1308.severity = none

# Identifiers should not match keywords.
dotnet_diagnostic.CA1716.severity = none

# Identifiers should not contain type names.
dotnet_diagnostic.CA1720.severity = none

# Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# Operator overloads have named alternates.
dotnet_diagnostic.CA2225.severity = none

# -= Analyzers (Roslynator) =-

# Enum should declare explicit values.
dotnet_diagnostic.RCS1161.severity = none

# Deprecated analysers.
dotnet_diagnostic.RCS1063.severity = none
dotnet_diagnostic.RCS1237.severity = none

# -= Analyzers (StyleCop) =-

# Prefix local calls with this.
dotnet_diagnostic.SA1101.severity = none

# A field name in C# is prefixed with 'm_', 's_', or 't_'.
dotnet_diagnostic.SA1308.severity = none

# Field should not begin with an underscore.
dotnet_diagnostic.SA1309.severity = none

# The name of a static readonly field does not begin with an upper-case letter.
dotnet_diagnostic.SA1311.severity = none

# The file header is missing or not located at the top of the file.
dotnet_diagnostic.SA1633.severity = none

# Disable rules which conflict with the CSharpier formatter.
# See https://csharpier.com/docs/IntegratingWithLinters for further information.
dotnet_diagnostic.SA1003.severity = none
dotnet_diagnostic.SA1008.severity = none
dotnet_diagnostic.SA1009.severity = none
dotnet_diagnostic.SA1010.severity = none
dotnet_diagnostic.SA1111.severity = none
dotnet_diagnostic.SA1118.severity = none
dotnet_diagnostic.SA1500.severity = none
dotnet_diagnostic.SA1502.severity = none
dotnet_diagnostic.SA1504.severity = none
dotnet_diagnostic.SA1515.severity = none
dotnet_diagnostic.SA1516.severity = none

[**/*Tests.cs]
# Prefer anonymous functions in tests to allow for mocked functions to be defined within tests.
csharp_style_prefer_local_over_anonymous_function = false:warning

# Identifiers should not contain underscores.
dotnet_diagnostic.CA1707.severity = none

# Do not directly await a Task.
# Test methods should not call ConfigureAwait(false), as it may bypass parallelization limits.
dotnet_diagnostic.CA2007.severity = none

# Add .ConfigureAwait(bool) to your await expression.
# Test methods should not call ConfigureAwait(false), as it may bypass parallelization limits.
dotnet_diagnostic.VSTHRD111.severity = none

# XML comment analysis is disabled due to project configuration.
dotnet_diagnostic.SA0001.severity = none

# Elements should be documented.
dotnet_diagnostic.SA1600.severity = none
